SET SERVEROUTPUT ON;
DECLARE
ROW_COUNT NUMBER(10);
BEGIN
    SELECT count(*) into ROW_COUNT FROM user_tables where table_name = 'CONFIG_TABLE';
    IF(ROW_COUNT > 0)
    THEN
        DBMS_OUTPUT.PUT_LINE('TABLE CONFIG_TABLE ALREADY EXISTS');
    ELSE
        EXECUTE IMMEDIATE 'CREATE TABLE CONFIG_TABLE
    (
       TABLE_NAME varchar2(50), 
       TABLE_DEF varchar2(3000) NOT NULL, 
       CONSTRAINT CONFIG_TABLE_PK PRIMARY KEY(TABLE_NAME)
    )
    ';    
     DBMS_OUTPUT.PUT_LINE('TABLE CONFIG_TABLE CREATED SUCCESSFULLY');
    
    EXECUTE IMMEDIATE q'[INSERT INTO CONFIG_TABLE VALUES ('LOCATION','CREATE TABLE LOCATION
            (	
            LOCATION_ID NUMBER(10), 
            CITY VARCHAR2(20) NOT NULL, 
            STATE VARCHAR2(20) NOT NULL,
            ZIPCODE NUMBER(10),
            CONSTRAINT LOCATION_PK PRIMARY KEY(LOCATION_ID)
            )
    ')]';
    
     EXECUTE IMMEDIATE q'[INSERT INTO CONFIG_TABLE VALUES ('GROUPS','CREATE TABLE GROUPS
            (	
            GROUPS_ID NUMBER(10), 
            GROUPS_NAME VARCHAR2(20) NOT NULL, 
            GROUPS_DESCRIPTION VARCHAR2(20) NOT NULL,
            CONSTRAINT GROUPS_PK PRIMARY KEY(GROUPS_ID)
            )
    ')]';
    
      EXECUTE IMMEDIATE q'[INSERT INTO CONFIG_TABLE VALUES ('ROLES','CREATE TABLE ROLES
            (	
            ROLES_ID NUMBER(10), 
            ROLES_DESCRIPTION VARCHAR2(20) NOT NULL,
            CONSTRAINT ROLES_PK PRIMARY KEY(ROLES_ID)
            )
    ')]';
    
     EXECUTE IMMEDIATE q'[INSERT INTO CONFIG_TABLE VALUES ('GROUPS_ROLES','CREATE TABLE GROUPS_ROLES
            (
             GROUPS_ROLES_ID NUMBER(10), 
             GROUPS_ID NUMBER(10), 
             ROLES_ID NUMBER(10), 
             CONSTRAINT GROUPS_ROLES_PK PRIMARY KEY(GROUPS_ROLES_ID),
             CONSTRAINT GROUPS_ROLES_FK_GROUPS FOREIGN KEY (GROUPS_ID) REFERENCES GROUPS(GROUPS_ID),
             CONSTRAINT GROUPS_ROLES_FK_ROLES FOREIGN KEY (ROLES_ID) REFERENCES ROLES(ROLES_ID) 
    )
    ')]';
    
     EXECUTE IMMEDIATE q'[INSERT INTO CONFIG_TABLE VALUES ('USERS','CREATE TABLE USERS
            (
              USER_ID NUMBER(10)
            , PHONE NUMBER(10)
            , PWD VARCHAR2(10) NOT NULL 
            , EMERGENCY_CONTACT VARCHAR2(10) NOT NULL 
            , LOCATION_ID NUMBER(10) NOT NULL 
            , RISK_STATUS INT 
            , LAST_NAME VARCHAR2(10) 
            , FIRST_NAME VARCHAR2(10) NOT NULL 
            , DOB DATE NOT NULL 
            , JOIN_DATE DATE DEFAULT SYSDATE
            , GROUPS_ID NUMBER(10) DEFAULT 1 
            , EMAIL VARCHAR2(10) NOT NULL 
            ,  CONSTRAINT USERS_PK PRIMARY KEY(USER_ID)
            ,  CONSTRAINT EMAIL_VALIDATION CHECK(REGEXP_LIKE(EMAIL,''^[A-Za-z]+[A-Za-z0-9.]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$''))
            ,  CONSTRAINT PHONE_VALIDATION CHECK(REGEXP_LIKE(PHONE, ''^[0-9]{10}$''))
            ,  CONSTRAINT USERS_FK_LOCATION FOREIGN KEY (LOCATION_ID) REFERENCES LOCATION(LOCATION_ID)
            ,  CONSTRAINT USERS_FK_GROUPS FOREIGN KEY (GROUPS_ID) REFERENCES GROUPS(GROUPS_ID) 
            )
       ')]';
       
       EXECUTE IMMEDIATE q'[INSERT INTO CONFIG_TABLE VALUES ('USER_LOGIN_AUDIT','CREATE TABLE USER_LOGIN_AUDIT
            (
             AUDIT_ID NUMBER(10), 
             USER_ID NUMBER(10),
             LOGIN_STATUS VARCHAR2(10) NOT NULL,
             AUDIT_DATE DATE NOT NULL,
             CONSTRAINT USER_LOGIN_AUDIT_PK PRIMARY KEY(AUDIT_ID),
             CONSTRAINT USER_LOGIN_AUDIT_FK_USERS FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ,
             CONSTRAINT USER_LOGIN_AUDIT_LOGIN_STATUS CHECK (LOGIN_STATUS IN (''login'',''logout''))
        )
      ')]';
         
    END IF;
END;
/

DECLARE
  CURSOR config_table_cur
  IS
    SELECT 
        *
    FROM 
        config_table;
        
    tab_name varchar2(50);
    tab_def varchar2(3000);
    row_count number(10):= 0;
BEGIN
  FOR i IN config_table_cur
  LOOP
      tab_name:= i.table_name;
      tab_def:= i.table_def;
      
      DBMS_OUTPUT.PUT_LINE('tab_name -- '|| tab_name);
      DBMS_OUTPUT.PUT_LINE('--------------------------');

      SELECT count(*) into row_count FROM user_tables where table_name = tab_name;
       IF(row_count > 0)
        THEN
            DBMS_OUTPUT.PUT_LINE('TABLE '|| tab_name || ' ALREADY EXISTS');
        ELSE
            DBMS_OUTPUT.PUT_LINE('--------------------------');  
            EXECUTE IMMEDIATE tab_def;
            dbms_output.put_line( 'TABLE '|| tab_name || ' CREATED SUCCESSFULLY!' );
         END IF;
  END LOOP;
  dbms_output.put_line( 'ALL TABLES CREATED');
END;
/

CREATE SEQUENCE  "ADMIN"."LOGIN_SEQ"  START WITH 1  INCREMENT BY 1 ;
CREATE SEQUENCE  "ADMIN"."SLOTS_SEQ"  START WITH 1  INCREMENT BY 1 ;
CREATE SEQUENCE  "ADMIN"."TEST_AVAILABILITY_SEQ"  START WITH 1  INCREMENT BY 1 ;
CREATE SEQUENCE  "ADMIN"."TEST_QPID_SEQ"  START WITH 1  INCREMENT BY 1 ;
CREATE SEQUENCE  "ADMIN"."TEST_SCHEDULE_SEQ"  START WITH 1  INCREMENT BY 1 ;
CREATE SEQUENCE  "ADMIN"."USER_SEQ"  START WITH 1  INCREMENT BY 1 ;
CREATE SEQUENCE  "ADMIN"."LOCATION_SEQ"  START WITH 1  INCREMENT BY 1 ;
CREATE SEQUENCE  "ADMIN"."TEST_CENTER_SEQ"  START WITH 1  INCREMENT BY 1 ;

INSERT INTO LOCATION VALUES (LOCATION_SEQ.NEXTVAL,'BOSTON','MA',02215);
INSERT INTO LOCATION VALUES (LOCATION_SEQ.NEXTVAL,'NEW YORK','NY',10001);
INSERT INTO LOCATION VALUES (LOCATION_SEQ.NEXTVAL,'CAMBRIDGE','MA',02114);
INSERT INTO LOCATION VALUES (LOCATION_SEQ.NEXTVAL,'LOWELL','MA',01850);
INSERT INTO LOCATION VALUES (LOCATION_SEQ.NEXTVAL,'SAN JOSE','CA',95119);
INSERT INTO LOCATION VALUES (LOCATION_SEQ.NEXTVAL,'SAN FRANCISCO','CA',94105);
INSERT INTO LOCATION VALUES (LOCATION_SEQ.NEXTVAL,'LOS ANGELES','CA',90001);


INSERT INTO TEST_TYPE VALUES (1, 'COVID - PCR');
INSERT INTO TEST_TYPE VALUES (2, 'COVID - RT PCR');
INSERT INTO TEST_TYPE VALUES (3, 'COVID - ANTIGEN');

SELECT * FROM TEST_CENTER;

SELECT * FROM SLOTS;
SELECT SYSDATE FROM DUAL;
INSERT INTO SLOTS VALUES (SLOTS_SEQ.NEXTVAL, 'MORNING', TO_TIMESTAMP('25-APR-21 08', 'DD-MON-YY HH24'),10);
INSERT INTO TEST_AVAILIBILTY VALUES(TEST_AVAILABILITY_SEQ.NEXTVAL, 10, SLOTS_SEQ.CURRVAL, 1);
INSERT INTO SLOTS VALUES (SLOTS_SEQ.NEXTVAL, 'MORNING', TO_TIMESTAMP('25-APR-21 09', 'DD-MON-YY HH24'),10);
INSERT INTO TEST_AVAILIBILTY VALUES(TEST_AVAILABILITY_SEQ.NEXTVAL, 10, SLOTS_SEQ.CURRVAL, 1);
INSERT INTO SLOTS VALUES (SLOTS_SEQ.NEXTVAL, 'MORNING', TO_TIMESTAMP('25-APR-21 10', 'DD-MON-YY HH24'),10);
INSERT INTO TEST_AVAILIBILTY VALUES(TEST_AVAILABILITY_SEQ.NEXTVAL, 10, SLOTS_SEQ.CURRVAL, 1);
INSERT INTO SLOTS VALUES (SLOTS_SEQ.NEXTVAL, 'MORNING', TO_TIMESTAMP('25-APR-21 11', 'DD-MON-YY HH24'),10);
INSERT INTO TEST_AVAILIBILTY VALUES(TEST_AVAILABILITY_SEQ.NEXTVAL, 10, SLOTS_SEQ.CURRVAL, 1);
INSERT INTO SLOTS VALUES (SLOTS_SEQ.NEXTVAL, 'MORNING', TO_TIMESTAMP('25-APR-21 12', 'DD-MON-YY HH24'),10);
INSERT INTO TEST_AVAILIBILTY VALUES(TEST_AVAILABILITY_SEQ.NEXTVAL, 10, SLOTS_SEQ.CURRVAL, 1);
INSERT INTO SLOTS VALUES (SLOTS_SEQ.NEXTVAL, 'MORNING', TO_TIMESTAMP('25-APR-21 14', 'DD-MON-YY HH24'),10);
INSERT INTO TEST_AVAILIBILTY VALUES(TEST_AVAILABILITY_SEQ.NEXTVAL, 10, SLOTS_SEQ.CURRVAL, 1);
INSERT INTO SLOTS VALUES (SLOTS_SEQ.NEXTVAL, 'MORNING', TO_TIMESTAMP('25-APR-21 15', 'DD-MON-YY HH24'),10);
INSERT INTO TEST_AVAILIBILTY VALUES(TEST_AVAILABILITY_SEQ.NEXTVAL, 10, SLOTS_SEQ.CURRVAL, 1);
INSERT INTO SLOTS VALUES (SLOTS_SEQ.NEXTVAL, 'MORNING', TO_TIMESTAMP('25-APR-21 16', 'DD-MON-YY HH24'),10);
INSERT INTO TEST_AVAILIBILTY VALUES(TEST_AVAILABILITY_SEQ.NEXTVAL, 10, SLOTS_SEQ.CURRVAL, 1);
INSERT INTO SLOTS VALUES (SLOTS_SEQ.NEXTVAL, 'MORNING', TO_TIMESTAMP('25-APR-21 17', 'DD-MON-YY HH24'),10);
INSERT INTO TEST_AVAILIBILTY VALUES(TEST_AVAILABILITY_SEQ.NEXTVAL, 10, SLOTS_SEQ.CURRVAL, 1);
INSERT INTO SLOTS VALUES (SLOTS_SEQ.NEXTVAL, 'MORNING', TO_TIMESTAMP('25-APR-21 18', 'DD-MON-YY HH24'),10);
INSERT INTO TEST_AVAILIBILTY VALUES(TEST_AVAILABILITY_SEQ.NEXTVAL, 10, SLOTS_SEQ.CURRVAL, 1);



INSERT INTO SLOTS VALUES (SLOTS_SEQ.NEXTVAL, 'MORNING', TO_TIMESTAMP('25-APR-21 08', 'DD-MON-YY HH24'),10);
INSERT INTO TEST_AVAILIBILTY VALUES(TEST_AVAILABILITY_SEQ.NEXTVAL, 11, SLOTS_SEQ.CURRVAL, 1);
INSERT INTO SLOTS VALUES (SLOTS_SEQ.NEXTVAL, 'MORNING', TO_TIMESTAMP('25-APR-21 09', 'DD-MON-YY HH24'),10);
INSERT INTO TEST_AVAILIBILTY VALUES(TEST_AVAILABILITY_SEQ.NEXTVAL, 11, SLOTS_SEQ.CURRVAL, 1);
INSERT INTO SLOTS VALUES (SLOTS_SEQ.NEXTVAL, 'MORNING', TO_TIMESTAMP('25-APR-21 10', 'DD-MON-YY HH24'),10);
INSERT INTO TEST_AVAILIBILTY VALUES(TEST_AVAILABILITY_SEQ.NEXTVAL, 11, SLOTS_SEQ.CURRVAL, 1);
INSERT INTO SLOTS VALUES (SLOTS_SEQ.NEXTVAL, 'MORNING', TO_TIMESTAMP('25-APR-21 11', 'DD-MON-YY HH24'),10);
INSERT INTO TEST_AVAILIBILTY VALUES(TEST_AVAILABILITY_SEQ.NEXTVAL, 11, SLOTS_SEQ.CURRVAL, 1);
INSERT INTO SLOTS VALUES (SLOTS_SEQ.NEXTVAL, 'MORNING', TO_TIMESTAMP('25-APR-21 12', 'DD-MON-YY HH24'),10);
INSERT INTO TEST_AVAILIBILTY VALUES(TEST_AVAILABILITY_SEQ.NEXTVAL, 11, SLOTS_SEQ.CURRVAL, 1);
INSERT INTO SLOTS VALUES (SLOTS_SEQ.NEXTVAL, 'MORNING', TO_TIMESTAMP('25-APR-21 14', 'DD-MON-YY HH24'),10);
INSERT INTO TEST_AVAILIBILTY VALUES(TEST_AVAILABILITY_SEQ.NEXTVAL, 11, SLOTS_SEQ.CURRVAL, 1);
INSERT INTO SLOTS VALUES (SLOTS_SEQ.NEXTVAL, 'MORNING', TO_TIMESTAMP('25-APR-21 15', 'DD-MON-YY HH24'),10);
INSERT INTO TEST_AVAILIBILTY VALUES(TEST_AVAILABILITY_SEQ.NEXTVAL, 11, SLOTS_SEQ.CURRVAL, 1);
INSERT INTO SLOTS VALUES (SLOTS_SEQ.NEXTVAL, 'MORNING', TO_TIMESTAMP('25-APR-21 16', 'DD-MON-YY HH24'),10);
INSERT INTO TEST_AVAILIBILTY VALUES(TEST_AVAILABILITY_SEQ.NEXTVAL, 11, SLOTS_SEQ.CURRVAL, 1);
INSERT INTO SLOTS VALUES (SLOTS_SEQ.NEXTVAL, 'MORNING', TO_TIMESTAMP('25-APR-21 17', 'DD-MON-YY HH24'),10);
INSERT INTO TEST_AVAILIBILTY VALUES(TEST_AVAILABILITY_SEQ.NEXTVAL, 11, SLOTS_SEQ.CURRVAL, 1);
INSERT INTO SLOTS VALUES (SLOTS_SEQ.NEXTVAL, 'MORNING', TO_TIMESTAMP('25-APR-21 18', 'DD-MON-YY HH24'),10);
INSERT INTO TEST_AVAILIBILTY VALUES(TEST_AVAILABILITY_SEQ.NEXTVAL, 11, SLOTS_SEQ.CURRVAL, 1);



--alter session set nls_date_format='DD-MON-RR';
--INSERT INTO SLOTS VALUES (SLOTS_SEQ.NEXTVAL, 'MORNING', TO_TIMESTAMP('25-APR-21 15', 'DD-MON-YY HH24'),10);


